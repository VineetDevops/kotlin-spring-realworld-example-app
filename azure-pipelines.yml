# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java


pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: spring-demo


steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- script: |
    echo Starting the build
    mvn -N io.takari:maven:wrapper
    ./mvnw clean install
  displayName: 'Build with Maven'
- script: |
    echo Build docker image
    docker build -t $username.azurecr.io/$(imageName):$(Build.BuildNumber) .
    echo Login to docker repository
    docker login -u $username -p $password $username.azurecr.io
    echo Push docker image
    docker push $username.azurecr.io/$(imageName):$(Build.BuildNumber)
  displayName: 'Build and Push Docker Image'
  env:
    username: $(docker_username)
    password: $(docker_password)
- task: HelmDeploy@0
  displayName: Helm init
  inputs:
    azureSubscriptionEndpoint: $azureSubscription
    azureResourceGroup: $azureRG
    kubernetesCluster: $kubeCluster
    command: init
    upgradetiller: true
    waitForExecution: true
    arguments: --client-only
  env:
    azureSubscription: $(azureSubscriptionEndpoint)
    azureRG: $(azureResourceGroup)
    kubeCluster: $(kubernetesCluster)
- task: HelmDeploy@0
  displayName: Helm package
  inputs:
    command: package
    chartPath: $cPath
    destination: $(Build.ArtifactStagingDirectory)
    version: $(Build.BuildNumber)
    updatedependency: true    
  env:
    cPath: $(chartPath)
